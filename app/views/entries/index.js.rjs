last_entry_date = @prev_entry.nil? ? nil : @prev_entry.date
groups = make_entry_groups(@entries)
groups.each do |group|
  if group[2] != last_entry_date
    page.insert_html :before, "entries_more", entries_header(group[0], group[1], group[2])
    if @prev_entry and last_entry_date == @prev_entry.date
      # Update the group header
      page << "Timer.updateDate('#{@prev_entry.date.to_s}');"
    end
    last_entry_date = group[2]
  end
  page.insert_html :before, "entries_more", :partial => 'entries/entry', :collection => group[1]
  
  page << group[1].map do |e|
    if e.terminated?
      nil
    else
      "Timer.register(#{e.id});"
    end
  end.compact.join('')
end

if @entries.length < 25
  page.remove "entries_more"
else
  page.replace "entries_more", :partial => 'entries/more', :locals => {:num => 25}
end
